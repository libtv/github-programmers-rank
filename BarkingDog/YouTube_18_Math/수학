
소수의 정의

소수 = 1과 자기 자신으로만 나누어지는 수 = 약수가 2개인 수

합성수 = 1과 자기 자신을 제외한 다른 약수를 가지고 있는 수


소수 판정법

소수 = 1과 자기 자신으로만 나누어지는 수
    = 약수가 2개인 수
    = 2부터 N-1까지의 수로 나누어지지 않는 수

합성수 N에서 1을 제외한 가장 작은 약수는 루트N 이하이다.

범위 내에서의 소수 판정법 - 에라토스테네스의 체
백준 1929 문제 참고

소인수분해
각 자연수를 소수들의 곱으로 표현하는 방법은 유일하다.

1100 = 2 * 2 * 5 * 5 * 11
백준 11653 참고

약수
약수 = 어떤 수를 나누어떨어지게 하는 수

루트 n을 해결 가능하다.

18의 약수는 1 2 3 6 9 18 이다.  1, 18  2, 9, 3, 6 만 찾으면 끝 이것도 18의 루트까지 찾으면 끝
여기서 제곱수는 예외처리를 해야함.  16 같은 경우는 1, 16  2, 8  4, 4 니까 나누고 같으면 한번만 push 해주면 끝

최대공약수 (Great Common Divisor) = 두 자연수의 공통된 약수 중 가장 큰 약수

보통 최대공약수를 구하는 방법은 두 숫자의 약수를 모두 찾아내서 이중 for문으로 가장 큰 약수를 찾는 방법이 있지만
더 효율적인 알고리즘이 있다. -> 유클리드 호제법

유클리드 호제법
두 수 A, B에 대해 A를 B로 나눈 나머지를 R이라고 하면 GCD(A, B) = GCD(B, R)이다.
GCD(20, 12) = GCD(12, 8) = GCD(8, 4) = GCD(4, 0) = 4

최소 공배수 (Least Common Multiple (LCM) )

A * B = GCD(A, B) * LCM(A , B)

연립합동방정식

6명씩 조를 짰을 때 3명이 남았다.
5명씩 조를 짰을 때 2명이 남았다.
학생은 30명 미만이다.

63 = GCD(9, 7) * LCM(9, 7)
GCD(9, 7) = GCD(7 , 2) = GCD(2, 1) = GCD(1, 0) 최소공약수는 1 LCM은 63이지만 30명 미만이라는 조건에는 부합 X

1. 30미만인 수에서 6으로 나눈 나머지가 3인 값들을 먼저 찾는다.
2. 찾은 값중에서 5로 나눈면 2인값을 찾는다.


이항계수

순서를 고려하지 않고 5개에서 3개를 뽑는 경우 : 5! / (3! * 2!) = 10
순서를 고려하고 5개에서 3개를 뽑는 경우: 5! / 2! = 60